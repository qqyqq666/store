<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.store.mapper.AddressMapper">
    <!--
       select:表示查询操作。
       id: 你要执行的sql语法的唯一标识， mybatis会使用这个id的值来找到要执行的sql语句
           可以自定义，但是要求你使用接口中的方法名称。

       resultType:表示结果类型的， 是sql语句执行后得到ResultSet,遍历这个ResultSet得到java对象的类型。
          值写的类型的全限定名称
    -->

    <resultMap id="AddressEntityMap" type="com.example.store.entity.Address">
        <id column="aid" property="aid"/>
        <result column="province_code" property="provinceCode"/>
        <result column="province_name" property="provinceName"/>
        <result column="city_code" property="cityCode"/>
        <result column="city_name" property="cityName"/>
        <result column="area_code" property="areaCode"/>
        <result column="area_name" property="areaName"/>
        <result column="is_default" property="isDefault"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>

    <!-- 插入收货地址数据：Integer insert(Address address) -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="aid"><!--设置自增-->
        INSERT INTO t_address (
            uid, name, province_name, province_code, city_name, city_code, area_name, area_code, zip,
            address, phone, tel, tag, is_default, created_user, created_time, modified_user, modified_time
        ) VALUES (
                     #{uid}, #{name}, #{provinceName}, #{provinceCode}, #{cityName}, #{cityCode}, #{areaName},
                     #{areaCode}, #{zip}, #{address}, #{phone}, #{tel}, #{tag}, #{isDefault}, #{createdUser},
                     #{createdTime}, #{modifiedUser}, #{modifiedTime}
                 )
    </insert>
    <!-- 统计某用户的收货地址数据的数量：Integer countByUid(Integer uid) -->
    <select id="countByUid" resultType="java.lang.Integer"><!--int类型可以不写-->
       select
              count(*)
       from t_address
       where uid=#{uid}
    </select>
    
    <select id="findByUid" resultMap="AddressEntityMap">
        SELECT
            *
        FROM
            t_address
        WHERE
            uid=#{uid}
        order by
            is_default DESC, created_time DESC
    </select>

    <!-- 将某用户的所有收货地址设置为非默认地址：Integer updateNonDefaultByUid(Integer uid) -->
    <update id="updateNonDefaultByUid">
        UPDATE
            t_address
        SET
            is_default=0
        WHERE
            uid=#{uid}
    </update>

    <!-- 将指定的收货地址设置为默认地址：
        Integer updateDefaultByAid(
           @Param("aid") Integer aid,
           @Param("modifiedUser") String modifiedUser,
           @Param("modifiedTime") Date modifiedTime) -->
    <update id="updateDefaultByAid">
        UPDATE
            t_address
        SET
            is_default=1,
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        WHERE
            aid=#{aid}
    </update>

    <!-- 根据收货地址aid值，查询收货地址详情：Address findByAid(Integer aid) -->
    <select id="findByAid" resultMap="AddressEntityMap">
        SELECT
            *
        FROM
            t_address
        WHERE
            aid=#{aid}
    </select>

    <!-- 根据收货地址id删除数据：Integer deleteByAid(Integer aid) -->
    <delete id="deleteByAid">
        DELETE FROM
            t_address
        WHERE
            aid=#{aid}
    </delete>

    <!-- 查询某用户最后修改的收货地址：Address findLastModified(Integer uid) -->
    <select id="findLastModified" resultMap="AddressEntityMap">
        SELECT
            *
        FROM
            t_address
        WHERE
            uid=#{uid}
        ORDER BY
            modified_time DESC
            LIMIT 0,1   /*//第一页 第一条*/
    </select>

    <update id="updateAddressByAid">
        UPDATE
            t_address
        SET
            uid=#{uid},
            name=#{name},
            provinceName=#{provinceName},
            provinceCode=#{provinceCode},
            cityName=#{cityName},
            cityCode=#{cityCode},
            areaName=#{areaName},
            areaCode=#{areaCode},
            zip=#{zip},
            address=#{address},
            phone=#{phone},
            tel=#{tel},
            tag=#{tag},
           /* isDefault=#{isDefault},
            createdUser=#{createdUser},
            createdTime=#{createdTime},*/
            modifiedUser=#{modifiedUser},
            modifiedTime=#{modifiedTime}
        WHERE
            aid=#{aid}
    </update>
</mapper>